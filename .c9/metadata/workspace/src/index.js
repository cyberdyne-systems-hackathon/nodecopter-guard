{"changed":true,"filter":false,"title":"index.js","tooltip":"/src/index.js","value":"var df = require('dateformat')\n  , autonomy = require('../node_modules/ardrone-autonomy')\n  , mission  = autonomy.createMission()\n  , arDrone = require('../node_modules/nodecopter/node_modules/ar-drone')\n  , arDroneConstants = require('../node_modules/nodecopter/node_modules/ar-drone/lib/constants')\n  ;\n\nfunction navdata_option_mask(c) {\n  return 1 << c;\n}\n\n// From the SDK.\nvar navdata_options = (\n    navdata_option_mask(arDroneConstants.options.DEMO)\n  | navdata_option_mask(arDroneConstants.options.VISION_DETECT)\n  | navdata_option_mask(arDroneConstants.options.MAGNETO)\n  | navdata_option_mask(arDroneConstants.options.WIFI)\n);\n\n// Connect and configure the drone\nmission.client().config('general:navdata_demo', true);\nmission.client().config('general:navdata_options', navdata_options);\nmission.client().config('video:video_channel', 1);\nmission.client().config('detect:detect_type', 12);\n\nmission.log(\"mission-\" + df(new Date(), \"yyyy-mm-dd_hh-MM-ss\") + \".txt\");\n\nmission.takeoff()\n       .go({x:0, y:0, z:1.5})\n       .hover(30000)\n       .land();\n\nmission.run(function (err, result) {\n    if (err) {\n        console.trace(\"Oops, something bad happened: %s\", err.message);\n        mission.client().stop();\n        mission.client().land();\n    } else {\n        console.log(\"We are done!\");\n        process.exit(0);\n    }\n});\n\n","undoManager":{"mark":10,"position":11,"stack":[[{"group":"doc","deltas":[{"start":{"row":1,"column":27},"end":{"row":1,"column":43},"action":"insert","lines":["ardrone-autonomy"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":43},"end":{"row":2,"column":2},"action":"insert","lines":["","  "]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":1},"end":{"row":2,"column":2},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":43},"end":{"row":2,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":27},"end":{"row":1,"column":28},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":27},"end":{"row":1,"column":39},"action":"insert","lines":["node_modules"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":23},"end":{"row":3,"column":26},"action":"insert","lines":["../"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":26},"end":{"row":3,"column":37},"action":"insert","lines":["nodecopter/"]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":37},"end":{"row":3,"column":50},"action":"insert","lines":["node_modules/"]}]}],[{"group":"doc","deltas":[{"start":{"row":4,"column":32},"end":{"row":4,"column":59},"action":"insert","lines":["../nodecopter/node_modules/"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":5,"column":3},"action":"remove","lines":["var df = require('dateformat')","  , autonomy = require('../node_modules/ardrone-autonomy')","  , mission  = autonomy.createMission()","  , arDrone = require('../nodecopter/node_modules/ar-drone')","  , arDroneConstants = require('../nodecopter/node_modules/ar-drone/lib/constants')","  ;"]},{"start":{"row":0,"column":0},"end":{"row":5,"column":3},"action":"insert","lines":["var df = require('dateformat')","  , autonomy = require('../node_modules/ardrone-autonomy')","  , mission  = autonomy.createMission()","  , arDrone = require('../node_modules/nodecopter/node_modules/ar-drone')","  , arDroneConstants = require('../node_modules/nodecopter/node_modules/ar-drone/lib/constants')","  ;"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":5,"column":3},"end":{"row":5,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1427462952312}